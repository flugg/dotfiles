#!/bin/sh

# dot - CLI for installing dotfiles

version=0.1.0
current_dir="$( cd "$( dirname "$0" )" && pwd )"
commands=(`find "$current_dir/.." -name install.sh -mindepth 2 | sort | xargs -n1 dirname | xargs -n1 basename`)

red=`tput setaf 1`
green=`tput setaf 2`
blue=`tput setaf 6`
reset=`tput sgr0`

# Print the usage screen
usage() {
	echo "Dotfiles ${green}${version}${reset}"
	echo ""
	echo "${blue}Usage:${reset}"
	echo "  dot [command] [options]"
	echo ""
	echo "${blue}Commands:${reset}"

	for command in "${commands[@]}"; do
		name="$(tr '[:lower:]' '[:upper:]' <<< ${command:0:1})${command:1}"
		echo "  ${green}${command}${reset}\tInstall $name dotfiles";
	done
	
	echo ""
	echo "${blue}Options:${reset}"
	echo "  ${green}-h, --help${reset}     Show this help screen"
	echo "  ${green}-v, --version${reset}  Show the version"
	echo "  ${green}-e, --edit${reset}     Open dotfiles directory in editor"
	exit
}

# Run a dotfiles installer
install() {
	if [[ $# -eq 0 ]] ; then
		$DOTFILES/install.sh
	else
		$DOTFILES/$1/install.sh
	fi
}

if [[ $# -eq 0 ]] ; then
	# If no arguments are passed, we will run the installer for everything
	install
else
	# If we have arguments, we will loop through them and call the correct command
	while test $# -gt 0; do
		if [[ "${installers[@]}" =~ "$1" ]]; then
			install $1
			exit
		fi

		case "$1" in
			"-h"|"--help")
				usage
				;;
			"-v"|"--version")
				echo $version
				exit
				;;
			"-e"|"--edit")
				exec e "$DOTFILES"
				exit
				;;
			*)
				echo "Command not recognized: $1"
				echo ""
				usage
				;;
		esac
		shift
	done
fi